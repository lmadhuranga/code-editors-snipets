{
	// Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
		// 	"prefix": "log",
		// 	"body": [
			// 		"console.log('$1');",
			// 		"$2"
			// 	],
			// 	"description": "Log output to console"
			// }
			"wrap withs `${}`": {
				"prefix": "$$$",
				"body": [
					"`${ ${TM_SELECTED_TEXT} }`",
				],
				"description": "wrap with `${}`"
			},
			"display none if contion": {
				"prefix": "ssDisplaynone",
				"body": [
					"[ngStyle]=\"{display: (isFormHide==false)?'none':''}\"",
				],
				"description": "display none if contion`"
			},
			"wrap with ${}": {
				"prefix": "$$",
				"body": [
					"${ ${TM_SELECTED_TEXT} }",
				],
				"description": "wrap with ${}"
			},
			"logger": {
				"prefix": "sslog",
				"body": [
					"logger(`img uploader imgTYpe : ${} `, err)",
				],
				"description": "logger"
			},
			"sslocalnic": {
				"prefix": "sslocalnic",
				"body": [
					"this.localData.get('userData','nic');"
				],
				"description": "userData nic"
			},
			
			"sslocalData init": {
				"prefix": "sslocalinit",
				"body": [
					"private localData: ${1:LocalstorageService},"
				],
				"description": "Local storage service"
			},

	"Print to console": {
		"prefix": "clog",
		"body": [
			"console.log(`$1`${2:,$1});"
		],
		"description": "Log output to console"
	},

	"Import Service": {
		"prefix": "ssimpService",
		"body": [
			"import { $2 } from '../../services$1';",
			"$3"
		],
		"description": "Import Service"
	},

	"Import component": {
		"prefix": "ssimpComponent",
		"body": [
			"import { $2 } from './components$1';",
			"$3"
		],
		"description": "Import Component"
	},

	"Import componentconfig": {
		"prefix": "ssConfig",
		"body": [
			"import { ${2: appConfig } } from '../${1:../}config/globel.conf'",
			"$3"
		],
		"description": "Import Config"
	},

	"Import": {
		"prefix": "simport",
		"body": [
			"import { $2 } from '@angular/${1:core}';",
			"$3"
		],
		"description": "Import helper"
	},
	
	"Function": {
		"prefix": "ssfun",
		"body": [
			"$1($2){$3}"
		],
		"description": "Function"
	},

	
	"Todo": {
		"prefix": "ssTodo",
		"body": [
			"// Todo:: $1"
		],
		"description": "Function"
	},

	"Print to console1": {
		"prefix": "ssconstruct",
		"body": [ 
			"constructor(props) {",
			" super(props);",
			" this.state = {",
			"   name:'',",
			"   errors: {",
			"     name:'', ",
			"   }",
			" };",
			"//this.fun1 = this.fun1.bind(this);",
		 "}"
		],
		"description": "Log output to console"
	},



	
	"It": {
		"prefix": "sit",
		"body": [
			"it('should ${1:reason}', () => {",
				"$2",
			"});"
		],
		"description": "Function"
	},
	"Expect": {
		"prefix": "sexpect",
		"body": [
			"expect($1).${2:toHaveBeenCalledTimes}($3);",
			"$4"
		],
		"description": "Test Expect"
	},
 

}